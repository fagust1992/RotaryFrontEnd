hola sabes que quiero  implemntar el boton de modifcar la publicacion del usuario desdel front end
te dejare copia de codigo que me funciona solo quiero agregarele desde front end modificar el texto
te dejo copia de mi codigos relacionados:


front end aqui es donde quiero agregar el boton de modoficar:

import React, { useState, useEffect } from "react";
import { Global } from "../../helpers/Global";

const UserPublications = () => {
  const [publications, setPublications] = useState([]);
  const [message, setMessage] = useState("");
  const [currentPage, setCurrentPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);
console.log(publications)
  const defaultImage =
    "https://m.media-amazon.com/images/I/71MhRrRPqfL._AC_UF894,1000_QL80_.jpg"; // Imagen por defecto

  useEffect(() => {
    fetchPublications(currentPage);
  }, [currentPage]);

  const fetchPublications = async (page) => {
    try {
      const response = await fetch(
        `${Global.url}publication/publications?page=${page}`,
        {
          method: "GET",
        }
      );

      if (!response.ok) {
        throw new Error("Error fetching publications");
      }

      const data = await response.json();
      if (data.status === "success") {
        setPublications(data.publications);
        setTotalPages(data.totalPages);
      } else {
        setMessage(data.message || "Error loading publications.");
      }
    } catch (error) {
      console.error("Error:", error);
      setMessage("Error loading publications.");
    }
  };

  const handlePageChange = (newPage) => {
    if (newPage > 0 && newPage <= totalPages) {
      setCurrentPage(newPage);
    }
  };

  return (
    <div>
      <div className="container mt-5">
        <h2 className="mb-4">Publicaciones</h2>
        {message && <p className="alert alert-danger">{message}</p>}
        {publications.length > 0 ? (
          <>
            <ul className="list-group">
              {publications.map((pub) => (
                <li key={pub._id} className="list-group-item">
                  <p>
                    <strong>Noticia:</strong> {pub.text}
                  </p>
                  <img
                    src={pub.image === "default.png" ? defaultImage : pub.image} // Si la imagen es default.png, usa la imagen por defecto
                    alt="Publication"
                    className="img-fluid"
                    style={{ maxWidth: "200px", maxHeight: "200px" }}
                  />
                </li>
              ))}
            </ul>
            <div className="pagination mt-4">
              <button
                className="btn btn-primary me-2"
                onClick={() => handlePageChange(currentPage - 1)}
                disabled={currentPage === 1}
              >
                Anterior
              </button>
              <span>
                Página {currentPage} de {totalPages}
              </span>
              <button
                className="btn btn-primary ms-2"
                onClick={() => handlePageChange(currentPage + 1)}
                disabled={currentPage === totalPages}
              >
                Siguiente
              </button>
            </div>
          </>
        ) : (
          <p>No hay publicaciones disponibles.</p>
        )}
      </div>
    </div>
  );
};

export default UserPublications;


este codigo de mi backeend lo pobre y fiuncion en postmna asi es solo en el fron end que quiero agregar modificar:

const updatePublication = async (req, res) => {
  try {
    // Recoger información de la publicación a modificar
    const publicationId = req.params.id;
    const userId = req.user.id; // Asumiendo que req.user contiene la información del usuario autenticado
    const publicationToUpdate = req.body;


    
    // Verificar si la publicación existe y pertenece al usuario autenticado
    const existingPublication = await Publication.findOne({
      _id: publicationId,  
      
      user: userId,
    });

    if (!existingPublication) {
      return res.status(404).json({
        status: "error",
        message: "Publicación no encontrada o no pertenece al usuario",
      });
    }

    // Actualizar la publicación en la base de datos
    const updatedPublication = await Publication.findByIdAndUpdate(
      publicationId,
      publicationToUpdate,
      { new: true }
    );

    if (!updatedPublication) {
      return res.status(500).json({
        status: "error",
        message: "Error al actualizar la publicación",
      });
    }

    return res.status(200).json({
      status: "success",
      message: "Publicación actualizada exitosamente",
      publication: updatedPublication,
    });
  } catch (error) {
    console.error(error);
    return res.status(500).json({
      status: "error",
      message: "Hubo un error al actualizar la publicación",
    });
  }
};
